data.frame(pred.class=pred.id)
cbind(data, data.frame(pred.class=pred.id))
subset(pred.data, select="pred.class")
res
stats
summary
iterplot
interplot
des.res
dir
source('C:/Users/Saptarshi/Google Drive/ABBVIE/OptAUC/Lu Tian Visit 2016/optAUCx.lib.updated.R')
subgrp.optAUCx.cv.pred<-cv.optAUCx.fit(data, yvar, yvar.ref=1, xvars, censorvar=NULL, trtvar="treatment", type="b", trtref=1, des.res="larger", method.subgrp="youden", scale=TRUE, xselect=TRUE, cv.iter.xselect=2, k.fold.xselect=2, method.xselect="CV", pre.filter=NULL, method.filter=NULL,n.boot=10, cv.iter.eval=2, k.fold.eval=2, max.iter=500)
subgrp.optAUCx.cv.pred$stats.summary
subgrp.optAUCx.cv.pred$interplot
source('C:/Users/Saptarshi/Google Drive/ABBVIE/OptAUC/Lu Tian Visit 2016/optAUCx.lib.updated.R')
source('C:/Users/Saptarshi/Google Drive/ABBVIE/OptAUC/code/master_function_OptAUCX.R')
?"SubgrpID"
trtvar="treatment"
source('C:/Users/Saptarshi/Google Drive/ABBVIE/OptAUC/code/master_function_OptAUCX.R')
subgrp <- SubgrpID(data.train=data,
data.test=NULL,
yvar=yvar,
trtvar=trtvar,
trtref=1,
xvars=xvars,
type="b",
des.res = "larger",
method="OptAUC")
res
subgrp <- SubgrpID(data.train=data,
data.test=NULL,
yvar=yvar,
trtvar=trtvar,
trtref=1,
xvars=xvars,
type="b",
des.res = "larger",
method="OptAUC",)
subgrp <- SubgrpID(data.train=data,
data.test=NULL,
yvar=yvar,
trtvar=trtvar,
trtref=1,
xvars=xvars,
type="b",
des.res = "larger",
method="OptAUC",)
subgrp <- SubgrpID(data.train=data,
data.test=NULL,
yvar=yvar,
trtvar=trtvar,
trtref=1,
xvars=xvars,
type="b",
des.res = "larger",
method="OptAUC",
method.subgrp="aABC",
cv.iter.xselect=2,
k.fold.xselect=2,
do.cv=T,
cv.iter = 2,
k.fold = 2)
cv.iter.xselect
source('C:/Users/Saptarshi/Google Drive/ABBVIE/OptAUC/code/master_function_OptAUCX.R')
subgrp <- SubgrpID(data.train=data,
data.test=NULL,
yvar=yvar,
trtvar=trtvar,
trtref=1,
xvars=xvars,
type="b",
des.res = "larger",
method="OptAUC",
method.subgrp="aABC",
cv.iter.xselect=2,
k.fold.xselect=2,
do.cv=T,
cv.iter = 2,
k.fold = 2)
subgrp <- SubgrpID(data.train=data,
data.test=NULL,
yvar=yvar,
trtvar=trtvar,
trtref=1,
xvars=xvars,
type="b",
des.res = "larger",
method="OptAUC",
method.xselect="aABC",
cv.iter.xselect=2,
k.fold.xselect=2,
do.cv=T,
cv.iter = 2,
k.fold = 2)
source('C:/Users/Saptarshi/Google Drive/ABBVIE/OptAUC/code/master_function_OptAUCX.R')
subgrp <- SubgrpID(data.train=data,
data.test=NULL,
yvar=yvar,
trtvar=trtvar,
trtref=1,
xvars=xvars,
type="b",
des.res = "larger",
method="OptAUC",
method.xselect="aABC",
cv.iter.xselect=2,
k.fold.xselect=2,
do.cv=T,
cv.iter = 2,
k.fold = 2)
res
source('C:/Users/Saptarshi/Google Drive/ABBVIE/OptAUC/code/master_function_OptAUCX.R')
subgrp <- SubgrpID(data.train=data,
data.test=NULL,
yvar=yvar,
trtvar=trtvar,
trtref=1,
xvars=xvars,
type="b",
des.res = "larger",
method="OptAUC",
method.xselect="aABC",
cv.iter.xselect=2,
k.fold.xselect=2,
do.cv=T,
cv.iter = 2,
k.fold = 2)
res$res.optauc$beta
res$res.optauc$data
res$res.subgrp$train.stat
data.test[xvars]
data.train[xvars]
as.matrix(data.train[xvars])
as.matrix(data.train[xvars])%*%res$
as.matrix(data.train[xvars])%*%res
as.matrix(data.train[xvars])%*%res$res.optauc$beta
names(res$res.optauc$beta)
t(res$res.optauc$beta)%*%t(data.train[,names(res$res.optauc$beta), drop=FALSE])
data.train[,names(res$res.optauc$beta), drop=FALSE]%*%res$res.optauc$beta
as.matrix(data.train[,names(res$res.optauc$beta), drop=FALSE])%*%as.matrix(res$res.optauc$beta)
source('C:/Users/Saptarshi/Google Drive/ABBVIE/OptAUC/code/master_function_OptAUCX.R')
subgrp <- SubgrpID(data.train=data,
data.test=NULL,
yvar=yvar,
trtvar=trtvar,
trtref=1,
xvars=xvars,
type="b",
des.res = "larger",
method="OptAUC",
method.xselect="aABC",
cv.iter.xselect=2,
k.fold.xselect=2,
do.cv=T,
cv.iter = 2,
k.fold = 2)
train.stat
subgrp <- SubgrpID(data.train=data,
data.test=data,
yvar=yvar,
trtvar=trtvar,
trtref=1,
xvars=xvars,
type="b",
des.res = "larger",
method="OptAUC",
method.xselect="aABC",
cv.iter.xselect=2,
k.fold.xselect=2,
do.cv=T,
cv.iter = 2,
k.fold = 2)
source('C:/Users/Saptarshi/Google Drive/ABBVIE/OptAUC/code/master_function_OptAUCX.R')
subgrp <- SubgrpID(data.train=data,
data.test=data,
yvar=yvar,
trtvar=trtvar,
trtref=1,
xvars=xvars,
type="b",
des.res = "larger",
method="OptAUC",
method.xselect="aABC",
cv.iter.xselect=2,
k.fold.xselect=2,
do.cv=T,
cv.iter = 2,
k.fold = 2)
subgrp <- SubgrpID(data.train=data,
data.test=data,
yvar=yvar,
trtvar=trtvar,
trtref=1,
xvars=xvars,
type="b",
des.res = "larger",
method="OptAUC",
method.xselect="aABC",
cv.iter.xselect=2,
k.fold.xselect=2,
do.cv=T,
cv.iter = 2,
k.fold = 2)
score.test
score.test[1:5,]
as.data.frame(score.test)
cbind(data.test,score.test)
cbind(data.test,score)
score<-as.matrix(data.test[,names(res$res.optauc$beta), drop=FALSE])%*%as.matrix(res$res.optauc$beta)
cbind(data.test,score)
data.test<-cbind(data.test,score)
pred.data=predict.seq(data.test[,"score"], res)
data.test[,"score"]
res
pred.data=predict.seq(data.test[,"score"], res$res.subgrp$res)
res$res.subgrp$res
pred.data=predict.seq(data.test["score"], res$res.subgrp$res)
pred.data
test.stat=evaluate.results(data.test[yvar], pred.data, censor.vec=censor.vec.test, trt.vec=trt.vec.test, trtref=trtref, type=type)
test.stat$pval
train.stat$pval
source('C:/Users/Saptarshi/Google Drive/ABBVIE/OptAUC/code/master_function_OptAUCX.R')
subgrp <- SubgrpID(data.train=data,
data.test=data,
yvar=yvar,
trtvar=trtvar,
trtref=1,
xvars=xvars,
type="b",
des.res = "larger",
method="OptAUC",
method.xselect="aABC",
cv.iter.xselect=2,
k.fold.xselect=2,
do.cv=T,
cv.iter = 2,
k.fold = 2)
result$train.plot
result$test.plot
result$cv.res$interplot
source('C:/Users/Saptarshi/Google Drive/ABBVIE/OptAUC/code/master_function_OptAUCX.R')
subgrp.optAUCx <- SubgrpID(data.train=data,
data.test=NULL,
yvar=yvar,
trtvar=trtvar,
trtref=1,
xvars=xvars,
type="b",
des.res = "larger",
method="OptAUC",
method.xselect="aABC",
cv.iter.xselect=2,
k.fold.xselect=2,
do.cv=T,
cv.iter = 2,
k.fold = 2)
data[1:5,]
data$sig.pos
library("SubgrpID", lib.loc="~/R/win-library/3.2")
library(Gooogle)
library(zic)
data("docvisits")
data<-docvisits[,-c(3,17:23)]
yvar<-names(data)[1]
xvars<-names(data)[-1]
fit.gooogle<-gooogle(data=data,yvar=yvar,xvars=xvars,zvars=xvars,group=rep(1,14),samegrp.overlap=T,dist="poisson",penalty="gBridge",gamma=1)
library(Gooogle)
fit.gooogle<-gooogle(data=data,yvar=yvar,xvars=xvars,zvars=xvars,group=rep(1,14),samegrp.overlap=T,dist="poisson",penalty="gBridge",gamma=1)
?grpreg
fit.gooogle<-gooogle(data=data,yvar=yvar,xvars=xvars,zvars=xvars,group=rep(1,14),samegrp.overlap=T,dist="poisson",penalty="gBridge",gamma=1)
library(HDtweedie)
data("auto")
names(auto$x)
colnames(auto$x)
?auto
View(auto$x)
?Rscript
?ram
?apply
install.packages(devtools::gooogle)
library(devtools)
install.pacakges("devtools")
install.packages("devtools")
library(devtools)
install.packages(devtools::gooogle)
install.packages(devtools::Gooogle)
install.packages(github::gooogle)
install_github("himelmallick/gooogle")
install_github("cran/HDtweedie")
?install_github
install_github("himelmallick/gooogle",auth_token = "ed68523ee4848fed6b7cdaebe63ed1f326305bcd ")
install_github("himelmallick/gooogle",auth_token = "ed68523ee4848fed6b7cdaebe63ed1f326305bcd")
install_github("himelmallick/gooogle",auth_token =ed68523ee4848fed6b7cdaebe63ed1f326305bcd)
install_github("himelmallick/gooogle",auth_token ="ed68523ee4848fed6b7cdaebe63ed1f326305bcd")
load("C:/BACKUP/Shrabanti/methylation/out.RData")
bayes.vec
113016*1.14
load("C:/BACKUP/Shrabanti/methylation/out_NUM_01.RData")
plot.list[[1]]
ls(plot.list)
plot.list
plot.list[[1]]
ls(plot.list[[20]])
invisible(mean(1:3))
?pt
pwr<-data.frame(r.tau=r.tau,rho=rho,del=del,n=n,m=m,pwr.long.th=pwr.th,pwr.long.emp=pwr.emp,pwr.t.emp=pwr.t.emp)
n<-c(3,5,7)[i.n]
del<-c(0.4,0.5,0.6)[i.del]
rho<-c(0.4,0.5,0.6)[i.rho]
r.tau<-c(0.05,0.1)[i.r.tau]
i.n<-1
i.del<-1
i.rho<-1
i.r.tau<-1
n<-c(3,5,7)[i.n]
del<-c(0.4,0.5,0.6)[i.del]
rho<-c(0.4,0.5,0.6)[i.rho]
r.tau<-c(0.05,0.1)[i.r.tau]
n<-c(3,5,7)[i.n]
del<-c(0.4,0.5,0.6)[i.del]
rho<-c(0.4,0.5,0.6)[i.rho]
r.tau<-c(0.05,0.1)[i.r.tau]
pow<-0.8
# get m #
t<-0:(n-1)
var.t<-var(t)
del<-del/(n-1)
sig2<-1
sig.tau2<-r.tau*sig2
sig.22<-sig2*rho
sig.e2<-sig2*(1-rho)
m<-ceiling((sig2*(qnorm(0.975)+qnorm(pow))^2*(2*(1-rho+r.tau*n*var.t)))/(del^2*n*var.t))
pwr.th<-pnorm(del*sqrt(m*n*var.t)/(sqrt(sig2)*sqrt(2*(1-rho+r.tau*n*var.t)))-qnorm(0.975))
## Longitudinal (Emp pwr) ##
pv<-read.table(file=paste("C:\\BACKUP\\Shrabanti\\longitudinal\\data/pval_n_",i.n,"_del_",i.del,"_rho_",i.rho,"_r.tau_",i.r.tau,".txt",sep=""),header=T,sep="\t")
pvp<-as.vector(pv[,5])
pvp[pvp == "<.0001" ] <- 0
pvpf<-as.numeric(pvp)
pwr.emp<-mean(pvpf<=0.05)
# ## Two sample test (theoretical) ##
#
# pwr.t.th<-pt(del/sqrt())
#
#
## Two sample test (emp) ##
pval.list<-NULL
for (ir in 1:1000)
{
dataset<-read.csv(file=paste("C:\\BACKUP\\Shrabanti\\longitudinal\\data/data_n_",i.n,"_del_",i.del,"_rho_",i.rho,"_r.tau_",i.r.tau,"_iter_",ir,".csv",sep=""),header=T)
trt<-dataset[dataset$treat==1,]
y.time.first<-trt[trt$time==0,"y"]
y.time.last<-trt[trt$time==(n-1),"y"]
y.diff.trt<-y.time.last-y.time.first
ctrl<-dataset[dataset$treat==0,]
y.time.first<-ctrl[ctrl$time==0,"y"]
y.time.last<-ctrl[ctrl$time==(n-1),"y"]
y.diff.ctrl<-y.time.last-y.time.first
t.result<-t.test(y.diff.trt,y.diff.ctrl)
pval.list<-c(pval.list,t.result$p.value)
}
pwr.t.emp<-mean(pval.list<0.05)
pwr<-data.frame(r.tau=r.tau,rho=rho,del=del,n=n,m=m,pwr.long.th=pwr.th,pwr.long.emp=pwr.emp,pwr.t.emp=pwr.t.emp)
pwr
pwr.list<-NULL
pwr.list<-rbind(pwr.list,pwr)
pwr.list
pwr.list<-rbind(pwr.list,pwr)
pwr.list
ptm<-proc.time()
time.t<-round(proc.time()-ptm,3)[3]
time.t
print(paste("n_",i.n,"_del_",i.del,"_rho_",i.rho,"_r.tau_",i.r.tau,"_time.t=",time.t,sep=""))
pwr.list<-NULL
for (i.r.tau in 1:2)
{
for (i.rho in 1:3)
{
for (i.del in 1:2)
{
for (i.n in 1:3)
{
## Longitudinal (Th pwr) ##
n<-c(3,5,7)[i.n]
del<-c(0.4,0.5,0.6)[i.del]
rho<-c(0.4,0.5,0.6)[i.rho]
r.tau<-c(0.05,0.1)[i.r.tau]
pow<-0.8
# get m #
t<-0:(n-1)
var.t<-var(t)
del<-del/(n-1)
sig2<-1
sig.tau2<-r.tau*sig2
sig.22<-sig2*rho
sig.e2<-sig2*(1-rho)
m<-ceiling((sig2*(qnorm(0.975)+qnorm(pow))^2*(2*(1-rho+r.tau*n*var.t)))/(del^2*n*var.t))
pwr.th<-pnorm(del*sqrt(m*n*var.t)/(sqrt(sig2)*sqrt(2*(1-rho+r.tau*n*var.t)))-qnorm(0.975))
## Longitudinal (Emp pwr) ##
pv<-read.table(file=paste("C:\\BACKUP\\Shrabanti\\longitudinal\\data/pval_n_",i.n,"_del_",i.del,"_rho_",i.rho,"_r.tau_",i.r.tau,".txt",sep=""),header=T,sep="\t")
pvp<-as.vector(pv[,5])
pvp[pvp == "<.0001" ] <- 0
pvpf<-as.numeric(pvp)
pwr.emp<-mean(pvpf<=0.05)
# ## Two sample test (theoretical) ##
#
# pwr.t.th<-pt(del/sqrt())
#
#
## Two sample test (emp) ##
pval.list<-NULL
ptm<-proc.time()
for (ir in 1:1000)
{
dataset<-read.csv(file=paste("C:\\BACKUP\\Shrabanti\\longitudinal\\data/data_n_",i.n,"_del_",i.del,"_rho_",i.rho,"_r.tau_",i.r.tau,"_iter_",ir,".csv",sep=""),header=T)
trt<-dataset[dataset$treat==1,]
y.time.first<-trt[trt$time==0,"y"]
y.time.last<-trt[trt$time==(n-1),"y"]
y.diff.trt<-y.time.last-y.time.first
ctrl<-dataset[dataset$treat==0,]
y.time.first<-ctrl[ctrl$time==0,"y"]
y.time.last<-ctrl[ctrl$time==(n-1),"y"]
y.diff.ctrl<-y.time.last-y.time.first
t.result<-t.test(y.diff.trt,y.diff.ctrl)
pval.list<-c(pval.list,t.result$p.value)
}
pwr.t.emp<-mean(pval.list<0.05)
time.t<-round(proc.time()-ptm,3)[3]
pwr<-data.frame(r.tau=r.tau,rho=rho,del=del,n=n,m=m,pwr.long.th=pwr.th,pwr.long.emp=pwr.emp,pwr.t.emp=pwr.t.emp)
pwr.list<-rbind(pwr.list,pwr)
print(paste("n_",i.n,"_del_",i.del,"_rho_",i.rho,"_r.tau_",i.r.tau,"_time.t=",time.t,sep=""))
}
}
}
}
pwr.list
pwr.list<-NULL
for (i.r.tau in 1:2)
{
for (i.rho in 1:3)
{
for (i.del in 1:3)
{
for (i.n in 1:3)
{
## Longitudinal (Th pwr) ##
n<-c(3,5,7)[i.n]
del.unsc<-c(0.4,0.5,0.6)[i.del]
rho<-c(0.4,0.5,0.6)[i.rho]
r.tau<-c(0.05,0.1)[i.r.tau]
pow<-0.8
# get m #
t<-0:(n-1)
var.t<-var(t)
del<-del.unsc/(n-1)
sig2<-1
sig.tau2<-r.tau*sig2
sig.22<-sig2*rho
sig.e2<-sig2*(1-rho)
m<-ceiling((sig2*(qnorm(0.975)+qnorm(pow))^2*(2*(1-rho+r.tau*n*var.t)))/(del^2*n*var.t))
pwr.th<-pnorm(del*sqrt(m*n*var.t)/(sqrt(sig2)*sqrt(2*(1-rho+r.tau*n*var.t)))-qnorm(0.975))
## Longitudinal (Emp pwr) ##
pv<-read.table(file=paste("C:\\BACKUP\\Shrabanti\\longitudinal\\data/pval_n_",i.n,"_del_",i.del,"_rho_",i.rho,"_r.tau_",i.r.tau,".txt",sep=""),header=T,sep="\t")
pvp<-as.vector(pv[,5])
pvp[pvp == "<.0001" ] <- 0
pvpf<-as.numeric(pvp)
pwr.emp<-mean(pvpf<=0.05)
# ## Two sample test (theoretical) ##
#
# pwr.t.th<-pt(del/sqrt())
#
#
## Two sample test (emp) ##
pval.list<-NULL
ptm<-proc.time()
for (ir in 1:1000)
{
dataset<-read.csv(file=paste("C:\\BACKUP\\Shrabanti\\longitudinal\\data/data_n_",i.n,"_del_",i.del,"_rho_",i.rho,"_r.tau_",i.r.tau,"_iter_",ir,".csv",sep=""),header=T)
trt<-dataset[dataset$treat==1,]
y.time.first<-trt[trt$time==0,"y"]
y.time.last<-trt[trt$time==(n-1),"y"]
y.diff.trt<-y.time.last-y.time.first
ctrl<-dataset[dataset$treat==0,]
y.time.first<-ctrl[ctrl$time==0,"y"]
y.time.last<-ctrl[ctrl$time==(n-1),"y"]
y.diff.ctrl<-y.time.last-y.time.first
t.result<-t.test(y.diff.trt,y.diff.ctrl)
pval.list<-c(pval.list,t.result$p.value)
}
pwr.t.emp<-mean(pval.list<0.05)
time.t<-round(proc.time()-ptm,3)[3]
pwr<-data.frame(r.tau=r.tau,rho=rho,del=del.unsc,n=n,m=m,pwr.long.th=pwr.th,pwr.long.emp=pwr.emp,pwr.t.emp=pwr.t.emp)
pwr.list<-rbind(pwr.list,pwr)
print(paste("r.tau =",i.r.tau,", rho =",i.rho,", del =",i.del,", n =",i.n,", time.t =",time.t,sep=""))
}
}
}
}
write.csv(pwr.list,file="pwr.list.csv")
pwr.list
getwd()
?glm
setwd("C:\\Users\\Saptarshi\\Dropbox\\Gooogle\\Codes\\Github\\GooogleDoc")
penalties<-c("EMLasso","grLasso", "grMCP", "grSCAD", "gBridge")
likes<-c("normal","zip")
methods<-c(penalties[1],paste(penalties[-1],"_",likes[1],sep=""),paste(penalties[-1],"_",likes[2],sep=""))
methods
22700-102
22598/65
?cor
rep(8,5)
source('C:/Users/Saptarshi/Dropbox/Gooogle/Codes/Github/GooogleDoc/main.R')
gooogle
